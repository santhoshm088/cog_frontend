{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\91997\\\\Downloads\\\\coding_club_event-master\\\\coding_club_event-master\\\\front_end\\\\src\\\\screens\\\\SigninScreen.js\";\nimport React, { useContext, useReducer, useState } from 'react';\nimport '../styles/SigninScreen.css';\nimport Axios from 'axios';\nimport { getError } from '../utils.js';\nimport { Store } from '../Store.js';\nimport { toast } from 'react-toastify';\nimport { useNavigate } from 'react-router-dom';\nimport ReactLoading from 'react-loading';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst reducer = (state, action) => {\n  switch (action.type) {\n    case 'FETCH_REQUEST':\n      return {\n        ...state,\n        loading: true\n      };\n    case 'FETCH_SUCCESS':\n      return {\n        ...state,\n        loading: false\n      };\n    case 'FETCH_FAILED':\n      return {\n        ...state,\n        loading: false\n      };\n  }\n};\nexport default function SigninScreen() {\n  // const [rollno, setRollno] = useState('');\n  // const [name, setName] = useState('');\n  // const [email, setEmail] = useState('');\n  // const [department, setDepartment] = useState('Civil Engineering');\n  // const [year, setYear] = useState('2');\n  // const [section, setSection] = useState('A');\n\n  // const { state, dispatch: ctxDispatch } = useContext(Store);\n\n  // const [{ loading }, dispatch] = useReducer(reducer, { loading: false });\n\n  // const navigate = useNavigate();\n\n  // const registerHandler = async (e) => {\n  //   e.preventDefault();\n  //   try {\n  //     dispatch({ type: 'FETCH_REQUEST' });\n  //     const { data } = await Axios.put('/users/signin', {\n  //       rollno,\n  //       name,\n  //       email,\n  //       department,\n  //       year,\n  //       section,\n  //     });\n  //     ctxDispatch({ type: 'USER_SIGNIN', payload: data });\n  //     localStorage.setItem('userInfo', JSON.stringify(data));\n  //     dispatch({ type: 'FETCH_SUCCESS' });\n  //     toast.success(data.name + ' loggedin successfully!');\n  //     navigate('/guidelines');\n  //   } catch (err) {\n  //     dispatch({ type: 'FETCH_FAILED' });\n  //     toast.error(getError(err));\n  //   }\n  // };\n\n  // return (\n  //   <div className=\"sign-in-page\">\n  //     {loading && (\n  //       <div className=\"overlay1\">\n  //         <div className=\"loading-box\">\n  //           <ReactLoading\n  //             type=\"spinningBubbles\"\n  //             color=\"#00a2ff\"\n  //             height={'10%'}\n  //             width={'10%'}\n  //           />\n  //         </div>\n  //       </div>\n  //     )}\n  //     <div className=\"register-form-container\">\n  //       <div className=\"overlay\"> </div>\n  //       <form className=\"register-form\" onSubmit={registerHandler}>\n  //         <div className=\"input-field-tags\">\n  //           <label>\n  //             {' '}\n  //             Rollno <div className=\"required-element\"> * </div>{' '}\n  //           </label>{' '}\n  //           <input\n  //             type=\"text\"\n  //             onChange={(e) => setRollno(e.target.value)}\n  //             className=\"input-fields\"\n  //             required\n  //           />{' '}\n  //         </div>{' '}\n  //         <div className=\"input-field-tags\">\n  //           <label>\n  //             Name <div className=\"required-element\"> * </div>\n  //           </label>\n  //           <input\n  //             type=\"text\"\n  //             onChange={(e) => setName(e.target.value)}\n  //             className=\"input-fields\"\n  //             required\n  //           />\n  //         </div>\n  //         <div className=\"input-field-tags\">\n  //           <label>\n  //             Email <div className=\"required-element\"> * </div>{' '}\n  //           </label>{' '}\n  //           <input\n  //             type=\"email\"\n  //             onChange={(e) => setEmail(e.target.value)}\n  //             className=\"input-fields\"\n  //             required\n  //           />{' '}\n  //         </div>{' '}\n  //         <div className=\"input-field-tags\">\n  //           <label>\n  //             {' '}\n  //             Department <div className=\"required-element\"> * </div>{' '}\n  //           </label>{' '}\n  //           <select onChange={(e) => setDepartment(e.target.value)}>\n  //             <option value=\"Civil Engineering\"> Civil Engineering </option>{' '}\n  //             <option value=\"Mechanical Engineering\">\n  //               Mechanical Engineering{' '}\n  //             </option>{' '}\n  //             <option value=\"Mechatronics Engineering\">\n  //               Mechatronics Engineering{' '}\n  //             </option>{' '}\n  //             <option value=\"Automobile Engineering\">\n  //               Automobile Engineering{' '}\n  //             </option>{' '}\n  //             <option value=\"Chemical Engineering\">\n  //               {' '}\n  //               Chemical Engineering{' '}\n  //             </option>{' '}\n  //             <option value=\"Food Technology\"> Food Technology </option>{' '}\n  //             <option value=\"Electrical and Electronics Engineering\">\n  //               Electrical and Electronics Engineering{' '}\n  //             </option>{' '}\n  //             <option value=\"Electronics and Instrumentation Engineering\">\n  //               Electronics and Instrumentation Engineering{' '}\n  //             </option>{' '}\n  //             <option value=\"Electrical and Communication Engineering\">\n  //               Electrical and Communication Engineering{' '}\n  //             </option>{' '}\n  //             <option value=\"B.Sc Computer Systems and Design\">\n  //               B.Sc Computer Systems and Design{' '}\n  //             </option>{' '}\n  //             <option value=\"B.Sc Information Systems\">\n  //               B.Sc Information Systems{' '}\n  //             </option>{' '}\n  //             <option value=\"B.Sc Software Systems\">\n  //               B.Sc Software Systems{' '}\n  //             </option>{' '}\n  //             <option value=\"M.Sc Software Systems\">\n  //               M.Sc Software Systems{' '}\n  //             </option>{' '}\n  //             <option value=\"MBA\"> MBA </option>{' '}\n  //             <option value=\"MCA\"> MCA </option>{' '}\n  //             <option value=\"CT-UG\"> CT - UG </option>{' '}\n  //             <option value=\"CT-PG\"> CT - PG </option>{' '}\n  //           </select>{' '}\n  //         </div>{' '}\n  //         <div className=\"input-field-tags\">\n  //           <label>\n  //             {' '}\n  //             Year <div className=\"required-element\"> * </div>{' '}\n  //           </label>{' '}\n  //           <select onChange={(e) => setYear(e.target.value)}>\n  //             <option value=\"2\"> II </option> <option value=\"3\"> III </option>{' '}\n  //             <option value=\"4\"> IV </option> <option value=\"5\"> V </option>{' '}\n  //           </select>{' '}\n  //         </div>{' '}\n  //         <div className=\"input-field-tags\">\n  //           <label>\n  //             {' '}\n  //             Section <div className=\"required-element\"> * </div>{' '}\n  //           </label>{' '}\n  //           <select type=\"text\" onChange={(e) => setSection(e.target.value)}>\n  //             <option value=\"A\"> A </option> <option value=\"B\"> B </option>{' '}\n  //             <option value=\"C\"> C </option> <option value=\"D\"> D </option>{' '}\n  //           </select>{' '}\n  //         </div>{' '}\n  //         <button type=\"submit\" className=\"register-button\">\n  //           Register{' '}\n  //         </button>{' '}\n  //       </form>{' '}\n  //     </div>{' '}\n  //     <div className=\"shape\">\n  //       <div className=\"floor\">\n  //         <div className=\"row\">\n  //           <span className=\"cube\"> ðŸ§Š </span>{' '}\n  //           <span className=\"cube\"> ðŸ§Š </span>{' '}\n  //           <span className=\"cube\"> ðŸ§Š </span>{' '}\n  //         </div>{' '}\n  //         <div className=\"row\">\n  //           <span className=\"cube\"> ðŸ§Š </span>{' '}\n  //           <span className=\"cube\"> ðŸ§Š </span>{' '}\n  //           <span className=\"cube\"> ðŸ§Š </span>{' '}\n  //         </div>\n  //         <div className=\"row\">\n  //           <span className=\"cube\"> ðŸ§Š </span>{' '}\n  //           <span className=\"cube\"> ðŸ§Š </span>{' '}\n  //           <span className=\"cube\"> ðŸ§Š </span>{' '}\n  //         </div>{' '}\n  //       </div>{' '}\n  //       <div className=\"floor\">\n  //         <div className=\"row\">\n  //           <span className=\"cube\"> ðŸ§Š </span>{' '}\n  //           <span className=\"cube\"> ðŸ§Š </span>{' '}\n  //           <span className=\"cube\"> ðŸ§Š </span>{' '}\n  //         </div>{' '}\n  //         <div className=\"row\">\n  //           <span className=\"cube\"> ðŸ§Š </span>{' '}\n  //           <span className=\"cube\"> ðŸ§Š </span>{' '}\n  //           <span className=\"cube\"> ðŸ§Š </span>{' '}\n  //         </div>\n  //         <div className=\"row\">\n  //           <span className=\"cube\"> ðŸ§Š </span>{' '}\n  //           <span className=\"cube\"> ðŸ§Š </span>{' '}\n  //           <span className=\"cube\"> ðŸ§Š </span>{' '}\n  //         </div>{' '}\n  //       </div>{' '}\n  //       <div className=\"floor\">\n  //         <div className=\"row\">\n  //           <span className=\"cube\"> ðŸ§Š </span>{' '}\n  //           <span className=\"cube\"> ðŸ§Š </span>{' '}\n  //           <span className=\"cube\"> ðŸ§Š </span>{' '}\n  //         </div>{' '}\n  //         <div className=\"row\">\n  //           <span className=\"cube\"> ðŸ§Š </span>{' '}\n  //           <span className=\"cube\"> ðŸ§Š </span>{' '}\n  //           <span className=\"cube\"> ðŸ§Š </span>{' '}\n  //         </div>\n  //         <div className=\"row\">\n  //           <span className=\"cube\"> ðŸ§Š </span>{' '}\n  //           <span className=\"cube\"> ðŸ§Š </span>{' '}\n  //           <span className=\"cube\"> ðŸ§Š </span>{' '}\n  //         </div>{' '}\n  //       </div>{' '}\n  //       <div className=\"floor\">\n  //         <div className=\"row\">\n  //           <span className=\"cube\"> </span>{' '}\n  //           <span className=\"cube\">\n  //             <span className=\"content\">\n  //               <h2> C </h2> <h2> C </h2>{' '}\n  //             </span>{' '}\n  //           </span>{' '}\n  //           <span className=\"cube\"> </span>{' '}\n  //         </div>{' '}\n  //         <div className=\"row\">\n  //           <span className=\"cube\"> </span> <span className=\"cube\"> </span>{' '}\n  //           <span className=\"cube\">\n  //             <span className=\"content\">\n  //               <h2> C </h2> <h2> C </h2>{' '}\n  //             </span>{' '}\n  //           </span>{' '}\n  //         </div>\n  //         <div className=\"row\">\n  //           <span className=\"cube\">\n  //             <span className=\"content\">\n  //               <h2> C </h2> <h2> C </h2>{' '}\n  //             </span>{' '}\n  //           </span>{' '}\n  //           <span className=\"cube\"> </span> <span className=\"cube\"> </span>{' '}\n  //         </div>{' '}\n  //       </div>{' '}\n  //     </div>{' '}\n  //   </div>\n  // );\n\n  const containerStyle = {\n    perspective: '23vmin',\n    background: `radial-gradient(\n        circle,\n        #00b8a9,\n        #f8f3d4,\n        #f6416c,\n        #ffde7d\n      )`,\n    backgroundSize: '100% 100%',\n    backgroundRepeat: 'no-repeat',\n    borderRadius: '50%',\n    transformStyle: 'preserve-3d',\n    animation: 'scale-up 20s linear infinite'\n  };\n  const keyframes = {\n    '0%': {\n      opacity: 0,\n      transform: 'translate3d(0, 0, 0) rotate(0)'\n    },\n    '10%': {\n      opacity: 1\n    },\n    '95%': {\n      transform: `translate3d(0, 0, ${getRandomArbitrary(50, 55)}vmin) rotate(${getRandomArbitrary(-360, 360)}deg)`\n    },\n    '100%': {\n      opacity: 0,\n      transform: 'translate3d(0, 0, 1vmin)'\n    }\n  };\n  const getRandomArbitrary = (min, max) => {\n    return Math.random() * (max - min) + min;\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      ...containerStyle,\n      width: '80%',\n      height: '80%',\n      margin: 'auto'\n    },\n    children: [[...Array(50)].map((_, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        width: '50vmin',\n        height: '1vmin',\n        margin: 'auto',\n        animation: 'scale-up 20s linear infinite',\n        animationDelay: `calc(${index} * -.4s)`,\n        backgroundColor: `rgb(${getRandomArbitrary(200, 240)}, ${getRandomArbitrary(200, 240)}, ${getRandomArbitrary(200, 240)})`\n      }\n    }, index, false, {\n      fileName: _jsxFileName,\n      lineNumber: 311,\n      columnNumber: 9\n    }, this)), /*#__PURE__*/_jsxDEV(\"style\", {\n      children: `\n        @keyframes scale-up {\n          ${Object.entries(keyframes).map(_ref => {\n        let [key, value] = _ref;\n        return `${key} { ${Object.entries(value).map(_ref2 => {\n          let [k, v] = _ref2;\n          return `${k}: ${v};`;\n        }).join('\\n')} }`;\n      }).join('\\n')}\n        }\n      `\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 326,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 309,\n    columnNumber: 5\n  }, this);\n}\n_c = SigninScreen;\nvar _c;\n$RefreshReg$(_c, \"SigninScreen\");","map":{"version":3,"names":["React","useContext","useReducer","useState","Axios","getError","Store","toast","useNavigate","ReactLoading","jsxDEV","_jsxDEV","reducer","state","action","type","loading","SigninScreen","containerStyle","perspective","background","backgroundSize","backgroundRepeat","borderRadius","transformStyle","animation","keyframes","opacity","transform","getRandomArbitrary","min","max","Math","random","style","width","height","margin","children","Array","map","_","index","animationDelay","backgroundColor","fileName","_jsxFileName","lineNumber","columnNumber","Object","entries","_ref","key","value","_ref2","k","v","join","_c","$RefreshReg$"],"sources":["C:/Users/91997/Downloads/coding_club_event-master/coding_club_event-master/front_end/src/screens/SigninScreen.js"],"sourcesContent":["import React, { useContext, useReducer, useState } from 'react';\nimport '../styles/SigninScreen.css';\nimport Axios from 'axios';\nimport { getError } from '../utils.js';\nimport { Store } from '../Store.js';\nimport { toast } from 'react-toastify';\nimport { useNavigate } from 'react-router-dom';\nimport ReactLoading from 'react-loading';\n\nconst reducer = (state, action) => {\n  switch (action.type) {\n    case 'FETCH_REQUEST':\n      return { ...state, loading: true };\n    case 'FETCH_SUCCESS':\n      return { ...state, loading: false };\n    case 'FETCH_FAILED':\n      return { ...state, loading: false };\n  }\n};\n\nexport default function SigninScreen() {\n  // const [rollno, setRollno] = useState('');\n  // const [name, setName] = useState('');\n  // const [email, setEmail] = useState('');\n  // const [department, setDepartment] = useState('Civil Engineering');\n  // const [year, setYear] = useState('2');\n  // const [section, setSection] = useState('A');\n\n  // const { state, dispatch: ctxDispatch } = useContext(Store);\n\n  // const [{ loading }, dispatch] = useReducer(reducer, { loading: false });\n\n  // const navigate = useNavigate();\n\n  // const registerHandler = async (e) => {\n  //   e.preventDefault();\n  //   try {\n  //     dispatch({ type: 'FETCH_REQUEST' });\n  //     const { data } = await Axios.put('/users/signin', {\n  //       rollno,\n  //       name,\n  //       email,\n  //       department,\n  //       year,\n  //       section,\n  //     });\n  //     ctxDispatch({ type: 'USER_SIGNIN', payload: data });\n  //     localStorage.setItem('userInfo', JSON.stringify(data));\n  //     dispatch({ type: 'FETCH_SUCCESS' });\n  //     toast.success(data.name + ' loggedin successfully!');\n  //     navigate('/guidelines');\n  //   } catch (err) {\n  //     dispatch({ type: 'FETCH_FAILED' });\n  //     toast.error(getError(err));\n  //   }\n  // };\n\n  // return (\n  //   <div className=\"sign-in-page\">\n  //     {loading && (\n  //       <div className=\"overlay1\">\n  //         <div className=\"loading-box\">\n  //           <ReactLoading\n  //             type=\"spinningBubbles\"\n  //             color=\"#00a2ff\"\n  //             height={'10%'}\n  //             width={'10%'}\n  //           />\n  //         </div>\n  //       </div>\n  //     )}\n  //     <div className=\"register-form-container\">\n  //       <div className=\"overlay\"> </div>\n  //       <form className=\"register-form\" onSubmit={registerHandler}>\n  //         <div className=\"input-field-tags\">\n  //           <label>\n  //             {' '}\n  //             Rollno <div className=\"required-element\"> * </div>{' '}\n  //           </label>{' '}\n  //           <input\n  //             type=\"text\"\n  //             onChange={(e) => setRollno(e.target.value)}\n  //             className=\"input-fields\"\n  //             required\n  //           />{' '}\n  //         </div>{' '}\n  //         <div className=\"input-field-tags\">\n  //           <label>\n  //             Name <div className=\"required-element\"> * </div>\n  //           </label>\n  //           <input\n  //             type=\"text\"\n  //             onChange={(e) => setName(e.target.value)}\n  //             className=\"input-fields\"\n  //             required\n  //           />\n  //         </div>\n  //         <div className=\"input-field-tags\">\n  //           <label>\n  //             Email <div className=\"required-element\"> * </div>{' '}\n  //           </label>{' '}\n  //           <input\n  //             type=\"email\"\n  //             onChange={(e) => setEmail(e.target.value)}\n  //             className=\"input-fields\"\n  //             required\n  //           />{' '}\n  //         </div>{' '}\n  //         <div className=\"input-field-tags\">\n  //           <label>\n  //             {' '}\n  //             Department <div className=\"required-element\"> * </div>{' '}\n  //           </label>{' '}\n  //           <select onChange={(e) => setDepartment(e.target.value)}>\n  //             <option value=\"Civil Engineering\"> Civil Engineering </option>{' '}\n  //             <option value=\"Mechanical Engineering\">\n  //               Mechanical Engineering{' '}\n  //             </option>{' '}\n  //             <option value=\"Mechatronics Engineering\">\n  //               Mechatronics Engineering{' '}\n  //             </option>{' '}\n  //             <option value=\"Automobile Engineering\">\n  //               Automobile Engineering{' '}\n  //             </option>{' '}\n  //             <option value=\"Chemical Engineering\">\n  //               {' '}\n  //               Chemical Engineering{' '}\n  //             </option>{' '}\n  //             <option value=\"Food Technology\"> Food Technology </option>{' '}\n  //             <option value=\"Electrical and Electronics Engineering\">\n  //               Electrical and Electronics Engineering{' '}\n  //             </option>{' '}\n  //             <option value=\"Electronics and Instrumentation Engineering\">\n  //               Electronics and Instrumentation Engineering{' '}\n  //             </option>{' '}\n  //             <option value=\"Electrical and Communication Engineering\">\n  //               Electrical and Communication Engineering{' '}\n  //             </option>{' '}\n  //             <option value=\"B.Sc Computer Systems and Design\">\n  //               B.Sc Computer Systems and Design{' '}\n  //             </option>{' '}\n  //             <option value=\"B.Sc Information Systems\">\n  //               B.Sc Information Systems{' '}\n  //             </option>{' '}\n  //             <option value=\"B.Sc Software Systems\">\n  //               B.Sc Software Systems{' '}\n  //             </option>{' '}\n  //             <option value=\"M.Sc Software Systems\">\n  //               M.Sc Software Systems{' '}\n  //             </option>{' '}\n  //             <option value=\"MBA\"> MBA </option>{' '}\n  //             <option value=\"MCA\"> MCA </option>{' '}\n  //             <option value=\"CT-UG\"> CT - UG </option>{' '}\n  //             <option value=\"CT-PG\"> CT - PG </option>{' '}\n  //           </select>{' '}\n  //         </div>{' '}\n  //         <div className=\"input-field-tags\">\n  //           <label>\n  //             {' '}\n  //             Year <div className=\"required-element\"> * </div>{' '}\n  //           </label>{' '}\n  //           <select onChange={(e) => setYear(e.target.value)}>\n  //             <option value=\"2\"> II </option> <option value=\"3\"> III </option>{' '}\n  //             <option value=\"4\"> IV </option> <option value=\"5\"> V </option>{' '}\n  //           </select>{' '}\n  //         </div>{' '}\n  //         <div className=\"input-field-tags\">\n  //           <label>\n  //             {' '}\n  //             Section <div className=\"required-element\"> * </div>{' '}\n  //           </label>{' '}\n  //           <select type=\"text\" onChange={(e) => setSection(e.target.value)}>\n  //             <option value=\"A\"> A </option> <option value=\"B\"> B </option>{' '}\n  //             <option value=\"C\"> C </option> <option value=\"D\"> D </option>{' '}\n  //           </select>{' '}\n  //         </div>{' '}\n  //         <button type=\"submit\" className=\"register-button\">\n  //           Register{' '}\n  //         </button>{' '}\n  //       </form>{' '}\n  //     </div>{' '}\n  //     <div className=\"shape\">\n  //       <div className=\"floor\">\n  //         <div className=\"row\">\n  //           <span className=\"cube\"> ðŸ§Š </span>{' '}\n  //           <span className=\"cube\"> ðŸ§Š </span>{' '}\n  //           <span className=\"cube\"> ðŸ§Š </span>{' '}\n  //         </div>{' '}\n  //         <div className=\"row\">\n  //           <span className=\"cube\"> ðŸ§Š </span>{' '}\n  //           <span className=\"cube\"> ðŸ§Š </span>{' '}\n  //           <span className=\"cube\"> ðŸ§Š </span>{' '}\n  //         </div>\n  //         <div className=\"row\">\n  //           <span className=\"cube\"> ðŸ§Š </span>{' '}\n  //           <span className=\"cube\"> ðŸ§Š </span>{' '}\n  //           <span className=\"cube\"> ðŸ§Š </span>{' '}\n  //         </div>{' '}\n  //       </div>{' '}\n  //       <div className=\"floor\">\n  //         <div className=\"row\">\n  //           <span className=\"cube\"> ðŸ§Š </span>{' '}\n  //           <span className=\"cube\"> ðŸ§Š </span>{' '}\n  //           <span className=\"cube\"> ðŸ§Š </span>{' '}\n  //         </div>{' '}\n  //         <div className=\"row\">\n  //           <span className=\"cube\"> ðŸ§Š </span>{' '}\n  //           <span className=\"cube\"> ðŸ§Š </span>{' '}\n  //           <span className=\"cube\"> ðŸ§Š </span>{' '}\n  //         </div>\n  //         <div className=\"row\">\n  //           <span className=\"cube\"> ðŸ§Š </span>{' '}\n  //           <span className=\"cube\"> ðŸ§Š </span>{' '}\n  //           <span className=\"cube\"> ðŸ§Š </span>{' '}\n  //         </div>{' '}\n  //       </div>{' '}\n  //       <div className=\"floor\">\n  //         <div className=\"row\">\n  //           <span className=\"cube\"> ðŸ§Š </span>{' '}\n  //           <span className=\"cube\"> ðŸ§Š </span>{' '}\n  //           <span className=\"cube\"> ðŸ§Š </span>{' '}\n  //         </div>{' '}\n  //         <div className=\"row\">\n  //           <span className=\"cube\"> ðŸ§Š </span>{' '}\n  //           <span className=\"cube\"> ðŸ§Š </span>{' '}\n  //           <span className=\"cube\"> ðŸ§Š </span>{' '}\n  //         </div>\n  //         <div className=\"row\">\n  //           <span className=\"cube\"> ðŸ§Š </span>{' '}\n  //           <span className=\"cube\"> ðŸ§Š </span>{' '}\n  //           <span className=\"cube\"> ðŸ§Š </span>{' '}\n  //         </div>{' '}\n  //       </div>{' '}\n  //       <div className=\"floor\">\n  //         <div className=\"row\">\n  //           <span className=\"cube\"> </span>{' '}\n  //           <span className=\"cube\">\n  //             <span className=\"content\">\n  //               <h2> C </h2> <h2> C </h2>{' '}\n  //             </span>{' '}\n  //           </span>{' '}\n  //           <span className=\"cube\"> </span>{' '}\n  //         </div>{' '}\n  //         <div className=\"row\">\n  //           <span className=\"cube\"> </span> <span className=\"cube\"> </span>{' '}\n  //           <span className=\"cube\">\n  //             <span className=\"content\">\n  //               <h2> C </h2> <h2> C </h2>{' '}\n  //             </span>{' '}\n  //           </span>{' '}\n  //         </div>\n  //         <div className=\"row\">\n  //           <span className=\"cube\">\n  //             <span className=\"content\">\n  //               <h2> C </h2> <h2> C </h2>{' '}\n  //             </span>{' '}\n  //           </span>{' '}\n  //           <span className=\"cube\"> </span> <span className=\"cube\"> </span>{' '}\n  //         </div>{' '}\n  //       </div>{' '}\n  //     </div>{' '}\n  //   </div>\n  // );\n\n\n\n\n  const containerStyle = {\n    perspective: '23vmin',\n    background: `radial-gradient(\n        circle,\n        #00b8a9,\n        #f8f3d4,\n        #f6416c,\n        #ffde7d\n      )`,\n    backgroundSize: '100% 100%',\n    backgroundRepeat: 'no-repeat',\n    borderRadius: '50%',\n    transformStyle: 'preserve-3d',\n    animation: 'scale-up 20s linear infinite',\n  };\n\n  const keyframes = {\n    '0%': {\n      opacity: 0,\n      transform: 'translate3d(0, 0, 0) rotate(0)',\n    },\n    '10%': {\n      opacity: 1,\n    },\n    '95%': {\n      transform: `translate3d(0, 0, ${getRandomArbitrary(50, 55)}vmin) rotate(${getRandomArbitrary(\n        -360,\n        360\n      )}deg)`,\n    },\n    '100%': {\n      opacity: 0,\n      transform: 'translate3d(0, 0, 1vmin)',\n    },\n  };\n\n  const getRandomArbitrary = (min, max) => {\n    return Math.random() * (max - min) + min;\n  };\n\n  return (\n    <div style={{ ...containerStyle, width: '80%', height: '80%', margin: 'auto' }}>\n      {[...Array(50)].map((_, index) => (\n        <div\n          key={index}\n          style={{\n            width: '50vmin',\n            height: '1vmin',\n            margin: 'auto',\n            animation: 'scale-up 20s linear infinite',\n            animationDelay: `calc(${index} * -.4s)`,\n            backgroundColor: `rgb(${getRandomArbitrary(200, 240)}, ${getRandomArbitrary(\n              200,\n              240\n            )}, ${getRandomArbitrary(200, 240)})`,\n          }}\n        />\n      ))}\n      <style>{`\n        @keyframes scale-up {\n          ${Object.entries(keyframes)\n            .map(([key, value]) => `${key} { ${Object.entries(value).map(([k, v]) => `${k}: ${v};`).join('\\n')} }`)\n            .join('\\n')}\n        }\n      `}</style>\n    </div>\n  );\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}